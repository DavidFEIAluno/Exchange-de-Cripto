int main() {
    Usuario usuarios[MAX_USUARIOS];
    Carteira carteiras[MAX_USUARIOS];
    int num_usuarios = carregar_usuarios(usuarios);
    Usuario usuario_atual;
    Carteira *carteira_atual = NULL;

    float cotacao_bitcoin = 120000.0;  // Exemplo de cotação inicial
    float cotacao_ethereum = 9000.0;
    float cotacao_ripple = 5.0;

    int opcao;

    srand(time(NULL)); // Para gerar variações aleatórias nas cotações

    while (1) {
        printf("\nBem-vindo ao sistema de investimentos!\n");
        printf("1. Cadastrar novo usuário\n");
        printf("2. Login\n");
        printf("3. Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                cadastrar_usuario(usuarios, &num_usuarios);
                salvar_usuarios(usuarios, num_usuarios);
                break;
            case 2:
                if (login(usuarios, num_usuarios, &usuario_atual)) {
                    printf("Login realizado com sucesso!\n");
                    carteira_atual = &carteiras[num_usuarios - 1];  // Associação de carteira ao usuário logado
                    while (1) {
                        exibir_menu();
                        printf("Escolha uma opção: ");
                        scanf("%d", &opcao);
                        // Os casos do menu principal, indo do 1 até o 8
                        switch (opcao) {
                            case 1:
                                consultar_saldo(&usuario_atual);
                                break;
                            case 2:
                                consultar_extrato(carteira_atual);
                                break;
                            case 3:
                                depositar_reais(&usuario_atual);
                                break;
                            case 4:
                                sacar_reais(&usuario_atual);
                                break;
                            case 5:
                                comprar_criptomoeda(&usuario_atual, cotacao_bitcoin, cotacao_ethereum, cotacao_ripple);
                                break;
                            case 6:
                                vender_criptomoeda(&usuario_atual, cotacao_bitcoin, cotacao_ethereum, cotacao_ripple);
                                break;
                            case 7:
                                atualizar_cotacao(&cotacao_bitcoin, &cotacao_ethereum, &cotacao_ripple);
                                break;
                            case 8:
                                printf("Saindo...\n");
                                salvar_usuarios(usuarios, num_usuarios);  // Salva os dados antes de sair
                                return 0;
                            default:
                                printf("Opção inválida. Tente novamente.\n");
                        }
                    }
                } else {
                    printf("Login falhou. CPF ou senha incorretos.\n");
                }
                break;
            case 3:
                printf("Encerrando o sistema...\n");
                return 0;
            default:
                printf("Opção inválida. Tente novamente.\n");
        }
    }
}